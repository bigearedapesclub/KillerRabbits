{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","apply","store","createStore","fetchDataFailed","fetchData","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","getState","methods","call","sent","t0","console","log","stop","_x","this","connectFailed","connect","abiResponse","abi","configResponse","CONFIG","_window","ethereum","accounts","SmartContractObj","fetch","headers","Content-Type","Accept","json","window","isMetaMask","Web3EthContract","setProvider","Web3","request","method","NETWORK","ID","CONTRACT_ADDRESS","on","updateAccount","location","reload","concat","NAME","_ref2","_callee2","_context2","_x2","Screen","styled","div","_templateObject","taggedTemplateLiteral","image","SpacerXSmall","_templateObject2","SpacerSmall","_templateObject3","SpacerMedium","_templateObject4","SpacerLarge","_templateObject5","Container","_templateObject6","flex","_ref3","fd","_ref4","jc","_ref5","ai","_ref6","test","_ref7","TextTitle","p","_templateObject7","TextDescription","_templateObject8","_templateObject9","truncate","_templateObject10","input","len","substring","StyledButton","button","App_templateObject","StyledRoundButton","App_templateObject2","ResponsiveWrapper","App_templateObject3","StyledLogo","img","App_templateObject4","StyledImg","App_templateObject5","StyledLink","App_templateObject6","App","useDispatch","useSelector","_useState","useState","_useState2","slicedToArray","claimingNft","setClaimingNft","_useState3","_useState4","feedback","setFeedback","_useState5","_useState6","mintAmount","setMintAmount","_useState7","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","_useState8","SET_CONFIG","getData","getConfig","config","useEffect","react_default","createElement","style","padding","backgroundColor","alt","src","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","target","href","Number","Fragment","onClick","e","preventDefault","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","transform","width","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c7cd7822.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.9;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 750px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"0x9c4Ec68e3752f9c851d80786D118B212956FB081\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"PolyRabbits\",\n      SYMBOL: \"PRBS\",\n      ID: 0,\n    },\n    NFT_NAME: \"PolyRabbits\",\n    SYMBOL: \"PRBS\",\n    MAX_SUPPLY: 10,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"OpenSea\",\n    MARKETPLACE_LINK: \"https://opensea.io/collection/polygonrabbits\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 20;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 7) {\n      newMintAmount = 20;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/example.gif\"}\n              style={{ transform: \"scaleX(-1)\" }}\n            />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit. Gotta Catch 'Em All.\n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}